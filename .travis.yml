# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# This file is not intended for end users of the tool.

# We don't need sudo so can avoid slower legacy TravisCI infrastructure
sudo: false

language: python
python: "3.6"
cache: pip

before_install:
 - "if grep -P '\t' *.md */*.md */*/*.md; then echo 'Tabs are bad, please use four spaces in Markdown files.'; false; fi"
 - "if grep -P '\t' *.yml .circleci/*.yml ; then echo 'Tabs are bad, please use four spaces in Yaml files.'; false; fi"
 - "if grep -P '\t' */*.py ; then echo 'Tabs are bad, please use four spaces in Python files.'; false; fi"
 - "if grep -n -r '[[:blank:]]$' *.md */*.md */*/*.md; then echo 'Please remove trailing whitespace in Markdown files.'; false; fi"
 - "if grep -n -r '[[:blank:]]$' *.yml .circleci/*.yml ; then echo 'Please remove trailing whitespace in Yaml files.'; false; fi"
 - "if grep -n -r '[[:blank:]]$' */*.py; then echo 'Please remove trailing whitespace in Python files.'; false; fi"
 - pip install --upgrade pip setuptools
 - pip install flake8 flake8-blind-except flake8-docstrings flake8-rst-docstrings restructuredtext-lint
 - echo "Using flake8 to check Python code"
 - flake8 .

install:
 - pip install -r requirements.txt
 - python -c "import Bio; print(Bio.__version__)"
 - python -c "import sqlalchemy; print(sqlalchemy.__version__)"
 - pip install .

script:
 - python -c "import thapbi_pict; print(thapbi_pict.__version__)"
 - thapbi_pict -v
 - python -m thapbi_pict -v
 - thapbi_pict legacy-import 2>&1 | grep "the following arguments are required"
 - thapbi_pict legacy-import -d $TMP/dup_seqs.sqlite tests/legacy-import/dup_seqs.fasta
 - if [ `sqlite3 $TMP/dup_seqs.sqlite "SELECT COUNT(id) FROM data_source;"` == "1" ]; then true; else echo "Wrong count"; false; fi
 - if [ `sqlite3 $TMP/dup_seqs.sqlite "SELECT COUNT(id) FROM its1_source;"` == "8" ]; then true; else echo "Wrong count"; false; fi
 - if [ `sqlite3 $TMP/dup_seqs.sqlite "SELECT COUNT(id) FROM its1_sequence;"` == "2" ]; then true; else echo "Wrong count"; false; fi
 - thapbi_pict legacy-import -d database/legacy/database.sqlite database/legacy/database.fasta
 - thapbi_pict legacy-import -d "sqlite:///:memory:" database/legacy/Phytophthora_ITS_database_v0.004.fasta
 - thapbi_pict legacy-import -d "database/legacy/Phytophthora_ITS_database_v0.005.sqlite" database/legacy/Phytophthora_ITS_database_v0.005.fasta
 - thapbi_pict legacy-import -d $TMP/legacy_004_and_005.sqlite database/legacy/Phytophthora_ITS_database_v0.004.fasta -n "Legacy DB v0.004"
 - thapbi_pict legacy-import -d $TMP/legacy_004_and_005.sqlite database/legacy/Phytophthora_ITS_database_v0.005.fasta -n "Legacy DB v0.005"
 - if [ `sqlite3 $TMP/legacy_004_and_005.sqlite "SELECT COUNT(id) FROM data_source;"` == "2" ]; then true; else echo "Wrong count"; false; fi
 - if [ `sqlite3 $TMP/legacy_004_and_005.sqlite "SELECT COUNT(id) FROM its1_source;"` == "378" ]; then true; else echo "Wrong count"; false; fi
 - if [ `sqlite3 $TMP/legacy_004_and_005.sqlite "SELECT COUNT(id) FROM its1_sequence;"` == "172" ]; then true; else echo "Wrong count"; false; fi
 - thapbi_pict dump 2>&1 | grep "the following arguments are required"
 - thapbi_pict dump -d "sqlite:///database/legacy/Phytophthora_ITS_database_v0.005.sqlite" -o /dev/null
 - thapbi_pict dump -d "sqlite:///database/legacy/Phytophthora_ITS_database_v0.005.sqlite" -o /dev/null -c 8a,8b
 - thapbi_pict dump -d database/legacy/database.sqlite -o /dev/null -c -
